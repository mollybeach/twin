// GENERATED by @edgedb/generate v0.5.6

import * as $ from "../reflection";
import * as _ from "../imports";
import type * as _std from "./std";
export type $AgentIdType = $.ScalarType<"std::str", string>;
const AgentIdType: $.scalarTypeWithConstructor<_std.$str, never> = $.makeType<$.scalarTypeWithConstructor<_std.$str, never>>(_.spec, "ad1336da-e04d-11ef-9f92-a1d75f4e9466", _.syntax.literal);

export type $NotificationType = {
  "create": $.$expr_Literal<$NotificationType>;
  "buy": $.$expr_Literal<$NotificationType>;
  "sell": $.$expr_Literal<$NotificationType>;
} & $.EnumType<"default::NotificationType", ["create", "buy", "sell"]>;
const NotificationType: $NotificationType = $.makeType<$NotificationType>(_.spec, "ad2f8362-e04d-11ef-9a75-fb6c7c8449ca", _.syntax.literal);

export type $TransactionType = {
  "buy": $.$expr_Literal<$TransactionType>;
  "sell": $.$expr_Literal<$TransactionType>;
} & $.EnumType<"default::TransactionType", ["buy", "sell"]>;
const TransactionType: $TransactionType = $.makeType<$TransactionType>(_.spec, "ad2090c8-e04d-11ef-9e1b-5d8f6ceb1b98", _.syntax.literal);

export type $AgentλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "analytics": $.LinkDesc<$Analytics, $.Cardinality.One, {}, false, false,  false, false>;
  "stats": $.LinkDesc<$AgentStats, $.Cardinality.One, {}, false, false,  false, false>;
  "tokenShares": $.LinkDesc<$TokenShare, $.Cardinality.One, {}, false, false,  false, false>;
  "tokenStats": $.LinkDesc<$TokenStats, $.Cardinality.One, {}, false, false,  false, false>;
  "verification": $.LinkDesc<$Verification, $.Cardinality.One, {}, false, false,  false, false>;
  "agentId": $.PropertyDesc<$AgentIdType, $.Cardinality.One, true, false, false, false>;
  "autoReply": $.PropertyDesc<_std.$bool, $.Cardinality.One, false, false, false, false>;
  "createdAt": $.PropertyDesc<_std.$datetime, $.Cardinality.One, false, false, false, true>;
  "description": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "isListed": $.PropertyDesc<_std.$bool, $.Cardinality.One, false, false, false, false>;
  "modelData": $.PropertyDesc<_std.$json, $.Cardinality.One, false, false, false, false>;
  "personality": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "price": $.PropertyDesc<_std.$decimal, $.Cardinality.One, false, false, false, false>;
  "profileImage": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "twinHandle": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "twitterHandle": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "fetchedTweets": $.LinkDesc<$FetchedTweet, $.Cardinality.AtLeastOne, {}, false, false,  false, false>;
  "transactions": $.LinkDesc<$Transaction, $.Cardinality.AtLeastOne, {}, false, false,  false, false>;
  "twineets": $.LinkDesc<$Twineet, $.Cardinality.AtLeastOne, {}, false, false,  false, false>;
}>;
type $Agent = $.ObjectType<"default::Agent", $AgentλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
  {agentId: {__element__: $AgentIdType, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $Agent = $.makeType<$Agent>(_.spec, "ad2c302c-e04d-11ef-8614-9dcabf323444", _.syntax.literal);

const Agent: $.$expr_PathNode<$.TypeSet<$Agent, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Agent, $.Cardinality.Many), null);

export type $AgentStatsλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "agentId": $.PropertyDesc<$AgentIdType, $.Cardinality.One, false, false, false, false>;
  "interactions": $.PropertyDesc<_std.$int16, $.Cardinality.One, false, false, false, false>;
  "replies": $.PropertyDesc<_std.$int16, $.Cardinality.One, false, false, false, false>;
  "uptime": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "<stats[is Agent]": $.LinkDesc<$Agent, $.Cardinality.Many, {}, false, false,  false, false>;
  "<stats": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $AgentStats = $.ObjectType<"default::AgentStats", $AgentStatsλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $AgentStats = $.makeType<$AgentStats>(_.spec, "ad134224-e04d-11ef-a4fa-99fdcb144d8a", _.syntax.literal);

const AgentStats: $.$expr_PathNode<$.TypeSet<$AgentStats, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($AgentStats, $.Cardinality.Many), null);

export type $AnalyticsλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "cryptoHoldings": $.LinkDesc<$CryptoHolding, $.Cardinality.One, {}, false, false,  false, false>;
  "dailyImpressions": $.LinkDesc<$DailyImpressions, $.Cardinality.One, {}, false, false,  false, false>;
  "demographics": $.LinkDesc<$Demographics, $.Cardinality.One, {}, false, false,  false, false>;
  "peakHours": $.LinkDesc<$PeakHours, $.Cardinality.One, {}, false, false,  false, false>;
  "reachByPlatform": $.LinkDesc<$ReachByPlatform, $.Cardinality.One, {}, false, false,  false, false>;
  "topInteractions": $.LinkDesc<$TopInteractions, $.Cardinality.One, {}, false, false,  false, false>;
  "agentId": $.PropertyDesc<$AgentIdType, $.Cardinality.One, false, false, false, false>;
  "clickThroughRate": $.PropertyDesc<_std.$decimal, $.Cardinality.One, false, false, false, false>;
  "engagementRate": $.PropertyDesc<_std.$decimal, $.Cardinality.One, false, false, false, false>;
  "impressions": $.PropertyDesc<_std.$int16, $.Cardinality.One, false, false, false, false>;
  "<analytics[is Agent]": $.LinkDesc<$Agent, $.Cardinality.Many, {}, false, false,  false, false>;
  "<analytics": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Analytics = $.ObjectType<"default::Analytics", $AnalyticsλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $Analytics = $.makeType<$Analytics>(_.spec, "ad1a1734-e04d-11ef-b137-3fe2fdf8ca5a", _.syntax.literal);

const Analytics: $.$expr_PathNode<$.TypeSet<$Analytics, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Analytics, $.Cardinality.Many), null);

export type $CryptoHoldingλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "agentId": $.PropertyDesc<$AgentIdType, $.Cardinality.One, false, false, false, false>;
  "amount": $.PropertyDesc<_std.$decimal, $.Cardinality.One, false, false, false, false>;
  "change24h": $.PropertyDesc<_std.$decimal, $.Cardinality.One, false, false, false, false>;
  "symbol": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "value": $.PropertyDesc<_std.$decimal, $.Cardinality.One, false, false, false, false>;
  "<cryptoHoldings[is Analytics]": $.LinkDesc<$Analytics, $.Cardinality.Many, {}, false, false,  false, false>;
  "<cryptoHoldings": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $CryptoHolding = $.ObjectType<"default::CryptoHolding", $CryptoHoldingλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $CryptoHolding = $.makeType<$CryptoHolding>(_.spec, "ad144e08-e04d-11ef-b8fb-bf1dc5cb336f", _.syntax.literal);

const CryptoHolding: $.$expr_PathNode<$.TypeSet<$CryptoHolding, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($CryptoHolding, $.Cardinality.Many), null);

export type $DailyImpressionsλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "agentId": $.PropertyDesc<$AgentIdType, $.Cardinality.One, false, false, false, false>;
  "count": $.PropertyDesc<_std.$int16, $.Cardinality.One, false, false, false, false>;
  "date": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "<dailyImpressions[is Analytics]": $.LinkDesc<$Analytics, $.Cardinality.Many, {}, false, false,  false, false>;
  "<dailyImpressions": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $DailyImpressions = $.ObjectType<"default::DailyImpressions", $DailyImpressionsλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $DailyImpressions = $.makeType<$DailyImpressions>(_.spec, "ad155140-e04d-11ef-a3e9-c77b680eece4", _.syntax.literal);

const DailyImpressions: $.$expr_PathNode<$.TypeSet<$DailyImpressions, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($DailyImpressions, $.Cardinality.Many), null);

export type $DemographicsλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "age": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "agentId": $.PropertyDesc<$AgentIdType, $.Cardinality.One, false, false, false, false>;
  "percentage": $.PropertyDesc<_std.$decimal, $.Cardinality.One, false, false, false, false>;
  "<demographics[is Analytics]": $.LinkDesc<$Analytics, $.Cardinality.Many, {}, false, false,  false, false>;
  "<demographics": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Demographics = $.ObjectType<"default::Demographics", $DemographicsλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $Demographics = $.makeType<$Demographics>(_.spec, "ad163f10-e04d-11ef-8332-c5c60508377a", _.syntax.literal);

const Demographics: $.$expr_PathNode<$.TypeSet<$Demographics, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Demographics, $.Cardinality.Many), null);

export type $FetchedTweetλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "agentId": $.PropertyDesc<$AgentIdType, $.Cardinality.One, false, false, false, false>;
  "edit_history_tweet_ids": $.PropertyDesc<$.ArrayType<_std.$str>, $.Cardinality.One, false, false, false, false>;
  "text": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "timestamp": $.PropertyDesc<_std.$datetime, $.Cardinality.One, false, false, false, true>;
  "<fetchedTweets[is Agent]": $.LinkDesc<$Agent, $.Cardinality.Many, {}, false, false,  false, false>;
  "<fetchedTweets": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $FetchedTweet = $.ObjectType<"default::FetchedTweet", $FetchedTweetλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $FetchedTweet = $.makeType<$FetchedTweet>(_.spec, "ad1c18ea-e04d-11ef-bfed-df2246fc49df", _.syntax.literal);

const FetchedTweet: $.$expr_PathNode<$.TypeSet<$FetchedTweet, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($FetchedTweet, $.Cardinality.Many), null);

export type $NotificationλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "agentId": $.PropertyDesc<$AgentIdType, $.Cardinality.One, false, false, false, false>;
  "kind": $.PropertyDesc<$NotificationType, $.Cardinality.One, false, false, false, false>;
  "message": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "timestamp": $.PropertyDesc<_std.$datetime, $.Cardinality.One, false, false, false, true>;
  "twinHandle": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "twitterHandle": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
}>;
type $Notification = $.ObjectType<"default::Notification", $NotificationλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $Notification = $.makeType<$Notification>(_.spec, "ad2f8c7c-e04d-11ef-8a34-83cb833de147", _.syntax.literal);

const Notification: $.$expr_PathNode<$.TypeSet<$Notification, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Notification, $.Cardinality.Many), null);

export type $PeakHoursλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "agentId": $.PropertyDesc<$AgentIdType, $.Cardinality.One, false, false, false, false>;
  "engagement": $.PropertyDesc<_std.$decimal, $.Cardinality.One, false, false, false, false>;
  "hour": $.PropertyDesc<_std.$int16, $.Cardinality.One, false, false, false, false>;
  "<peakHours[is Analytics]": $.LinkDesc<$Analytics, $.Cardinality.Many, {}, false, false,  false, false>;
  "<peakHours": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $PeakHours = $.ObjectType<"default::PeakHours", $PeakHoursλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $PeakHours = $.makeType<$PeakHours>(_.spec, "ad173cda-e04d-11ef-b4e9-3177c2ead015", _.syntax.literal);

const PeakHours: $.$expr_PathNode<$.TypeSet<$PeakHours, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($PeakHours, $.Cardinality.Many), null);

export type $ReachByPlatformλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "agentId": $.PropertyDesc<$AgentIdType, $.Cardinality.One, false, false, false, false>;
  "count": $.PropertyDesc<_std.$int16, $.Cardinality.One, false, false, false, false>;
  "platform": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "<reachByPlatform[is Analytics]": $.LinkDesc<$Analytics, $.Cardinality.Many, {}, false, false,  false, false>;
  "<reachByPlatform": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $ReachByPlatform = $.ObjectType<"default::ReachByPlatform", $ReachByPlatformλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $ReachByPlatform = $.makeType<$ReachByPlatform>(_.spec, "ad183432-e04d-11ef-ba48-d3f6640b75de", _.syntax.literal);

const ReachByPlatform: $.$expr_PathNode<$.TypeSet<$ReachByPlatform, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($ReachByPlatform, $.Cardinality.Many), null);

export type $TokenShareλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "agentId": $.PropertyDesc<$AgentIdType, $.Cardinality.One, false, false, false, false>;
  "availableShares": $.PropertyDesc<_std.$int16, $.Cardinality.One, false, false, false, false>;
  "pricePerShare": $.PropertyDesc<_std.$decimal, $.Cardinality.One, false, false, false, false>;
  "totalShares": $.PropertyDesc<_std.$int16, $.Cardinality.One, false, false, false, false>;
  "shareholders": $.LinkDesc<$UserTokenShare, $.Cardinality.AtLeastOne, {}, false, false,  false, false>;
  "<tokenShares[is Agent]": $.LinkDesc<$Agent, $.Cardinality.Many, {}, false, false,  false, false>;
  "<tokenShares": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $TokenShare = $.ObjectType<"default::TokenShare", $TokenShareλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $TokenShare = $.makeType<$TokenShare>(_.spec, "ad1e565a-e04d-11ef-8e99-ab4028b28f43", _.syntax.literal);

const TokenShare: $.$expr_PathNode<$.TypeSet<$TokenShare, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($TokenShare, $.Cardinality.Many), null);

export type $TokenStatsλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "agentId": $.PropertyDesc<$AgentIdType, $.Cardinality.One, false, false, false, false>;
  "change24h": $.PropertyDesc<_std.$decimal, $.Cardinality.One, false, false, false, false>;
  "marketCap": $.PropertyDesc<_std.$decimal, $.Cardinality.One, false, false, false, false>;
  "price": $.PropertyDesc<_std.$decimal, $.Cardinality.One, false, false, false, false>;
  "volume24h": $.PropertyDesc<_std.$decimal, $.Cardinality.One, false, false, false, false>;
  "<tokenStats[is Agent]": $.LinkDesc<$Agent, $.Cardinality.Many, {}, false, false,  false, false>;
  "<tokenStats": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $TokenStats = $.ObjectType<"default::TokenStats", $TokenStatsλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $TokenStats = $.makeType<$TokenStats>(_.spec, "ad1f78e6-e04d-11ef-98db-3790471bc9f1", _.syntax.literal);

const TokenStats: $.$expr_PathNode<$.TypeSet<$TokenStats, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($TokenStats, $.Cardinality.Many), null);

export type $TopInteractionsλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "agentId": $.PropertyDesc<$AgentIdType, $.Cardinality.One, false, false, false, false>;
  "count": $.PropertyDesc<_std.$int16, $.Cardinality.One, false, false, false, false>;
  "kind": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "<topInteractions[is Analytics]": $.LinkDesc<$Analytics, $.Cardinality.Many, {}, false, false,  false, false>;
  "<topInteractions": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $TopInteractions = $.ObjectType<"default::TopInteractions", $TopInteractionsλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $TopInteractions = $.makeType<$TopInteractions>(_.spec, "ad191f28-e04d-11ef-a509-070dd848f139", _.syntax.literal);

const TopInteractions: $.$expr_PathNode<$.TypeSet<$TopInteractions, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($TopInteractions, $.Cardinality.Many), null);

export type $TransactionλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "agentId": $.PropertyDesc<$AgentIdType, $.Cardinality.One, false, false, false, false>;
  "kind": $.PropertyDesc<$TransactionType, $.Cardinality.One, false, false, false, false>;
  "pricePerShare": $.PropertyDesc<_std.$decimal, $.Cardinality.One, false, false, false, false>;
  "shares": $.PropertyDesc<_std.$int16, $.Cardinality.One, false, false, false, false>;
  "timestamp": $.PropertyDesc<_std.$datetime, $.Cardinality.One, false, false, false, true>;
  "totalAmount": $.PropertyDesc<_std.$decimal, $.Cardinality.One, false, false, false, false>;
  "<transactions[is Agent]": $.LinkDesc<$Agent, $.Cardinality.Many, {}, false, false,  false, false>;
  "<transactions": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Transaction = $.ObjectType<"default::Transaction", $TransactionλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $Transaction = $.makeType<$Transaction>(_.spec, "ad2099f6-e04d-11ef-bd45-730cac08fbfd", _.syntax.literal);

const Transaction: $.$expr_PathNode<$.TypeSet<$Transaction, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Transaction, $.Cardinality.Many), null);

export type $TwineetλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "agentId": $.PropertyDesc<$AgentIdType, $.Cardinality.One, false, false, false, false>;
  "content": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "isLiked": $.PropertyDesc<_std.$bool, $.Cardinality.One, false, false, false, true>;
  "isRetwineeted": $.PropertyDesc<_std.$bool, $.Cardinality.One, false, false, false, true>;
  "likes": $.PropertyDesc<_std.$int16, $.Cardinality.One, false, false, false, true>;
  "replies": $.PropertyDesc<_std.$int16, $.Cardinality.One, false, false, false, true>;
  "retwineets": $.PropertyDesc<_std.$int16, $.Cardinality.One, false, false, false, true>;
  "timestamp": $.PropertyDesc<_std.$datetime, $.Cardinality.One, false, false, false, true>;
  "<twineets[is Agent]": $.LinkDesc<$Agent, $.Cardinality.Many, {}, false, false,  false, false>;
  "<twineets": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Twineet = $.ObjectType<"default::Twineet", $TwineetλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $Twineet = $.makeType<$Twineet>(_.spec, "ad21e16c-e04d-11ef-8b53-bb6763742972", _.syntax.literal);

const Twineet: $.$expr_PathNode<$.TypeSet<$Twineet, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Twineet, $.Cardinality.Many), null);

export type $UserTokenShareλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "agentId": $.PropertyDesc<$AgentIdType, $.Cardinality.One, false, false, false, false>;
  "purchaseDate": $.PropertyDesc<_std.$datetime, $.Cardinality.One, false, false, false, false>;
  "purchasePrice": $.PropertyDesc<_std.$decimal, $.Cardinality.One, false, false, false, false>;
  "userId": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "shares": $.PropertyDesc<_std.$decimal, $.Cardinality.One, false, false, false, false>;
  "<shareholders[is TokenShare]": $.LinkDesc<$TokenShare, $.Cardinality.Many, {}, false, false,  false, false>;
  "<shareholders": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $UserTokenShare = $.ObjectType<"default::UserTokenShare", $UserTokenShareλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $UserTokenShare = $.makeType<$UserTokenShare>(_.spec, "ad1d4fc6-e04d-11ef-b6e8-bfe9513c2ccf", _.syntax.literal);

const UserTokenShare: $.$expr_PathNode<$.TypeSet<$UserTokenShare, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($UserTokenShare, $.Cardinality.Many), null);

export type $VerificationλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "agentId": $.PropertyDesc<$AgentIdType, $.Cardinality.One, false, false, false, false>;
  "isVerified": $.PropertyDesc<_std.$bool, $.Cardinality.One, false, false, false, false>;
  "verificationDate": $.PropertyDesc<_std.$datetime, $.Cardinality.One, false, false, false, false>;
  "<verification[is Agent]": $.LinkDesc<$Agent, $.Cardinality.Many, {}, false, false,  false, false>;
  "<verification": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Verification = $.ObjectType<"default::Verification", $VerificationλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $Verification = $.makeType<$Verification>(_.spec, "ad2b338e-e04d-11ef-95f7-75d9a8d5172f", _.syntax.literal);

const Verification: $.$expr_PathNode<$.TypeSet<$Verification, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Verification, $.Cardinality.Many), null);



export { AgentIdType, NotificationType, TransactionType, $Agent, Agent, $AgentStats, AgentStats, $Analytics, Analytics, $CryptoHolding, CryptoHolding, $DailyImpressions, DailyImpressions, $Demographics, Demographics, $FetchedTweet, FetchedTweet, $Notification, Notification, $PeakHours, PeakHours, $ReachByPlatform, ReachByPlatform, $TokenShare, TokenShare, $TokenStats, TokenStats, $TopInteractions, TopInteractions, $Transaction, Transaction, $Twineet, Twineet, $UserTokenShare, UserTokenShare, $Verification, Verification };

type __defaultExports = {
  "AgentIdType": typeof AgentIdType;
  "NotificationType": typeof NotificationType;
  "TransactionType": typeof TransactionType;
  "Agent": typeof Agent;
  "AgentStats": typeof AgentStats;
  "Analytics": typeof Analytics;
  "CryptoHolding": typeof CryptoHolding;
  "DailyImpressions": typeof DailyImpressions;
  "Demographics": typeof Demographics;
  "FetchedTweet": typeof FetchedTweet;
  "Notification": typeof Notification;
  "PeakHours": typeof PeakHours;
  "ReachByPlatform": typeof ReachByPlatform;
  "TokenShare": typeof TokenShare;
  "TokenStats": typeof TokenStats;
  "TopInteractions": typeof TopInteractions;
  "Transaction": typeof Transaction;
  "Twineet": typeof Twineet;
  "UserTokenShare": typeof UserTokenShare;
  "Verification": typeof Verification
};
const __defaultExports: __defaultExports = {
  "AgentIdType": AgentIdType,
  "NotificationType": NotificationType,
  "TransactionType": TransactionType,
  "Agent": Agent,
  "AgentStats": AgentStats,
  "Analytics": Analytics,
  "CryptoHolding": CryptoHolding,
  "DailyImpressions": DailyImpressions,
  "Demographics": Demographics,
  "FetchedTweet": FetchedTweet,
  "Notification": Notification,
  "PeakHours": PeakHours,
  "ReachByPlatform": ReachByPlatform,
  "TokenShare": TokenShare,
  "TokenStats": TokenStats,
  "TopInteractions": TopInteractions,
  "Transaction": Transaction,
  "Twineet": Twineet,
  "UserTokenShare": UserTokenShare,
  "Verification": Verification
};
export default __defaultExports;
